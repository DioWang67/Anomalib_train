default_root_dir: D:/Git/robotlearning/Anomalib_train/outputs

seed: 42

accelerator: cpu
devices: 1

TrainModels:
  model:
    class_path: anomalib.models.Patchcore
    init_args:
      backbone: wide_resnet50_2
      layers:
        - layer2
        - layer3
      pre_trained: true
      coreset_sampling_ratio: 0.1
      num_neighbors: 9

  metrics:
    image:
      f1_score:
        class_path: torchmetrics.classification.BinaryF1Score
        init_args: {}
    pixel:
      mean_squared_error:
        class_path: torchmetrics.regression.MeanSquaredError
        init_args: {}

  trainer:
    max_epochs: 50
    accelerator: ${accelerator}
    devices: ${devices}
    enable_progress_bar: true

  data:
    train_batch_size: 16
    test_batch_size: 16
    num_workers: 4

data:
  class_path: anomalib.data.MVTec
  init_args:
    root: D:/Git/robotlearning/Anomalib_train/datasets
    category: con1
    task: segmentation
    val_split_mode: from_test  
    test_split_mode: from_dir
    image_size: 256
    batch_size: 16
    train_batch_size: 16
    eval_batch_size: 16
    num_workers: 4
    persistent_workers: true

optimization:
  optimizer:
    class_path: torch.optim.Adam
    init_args:
      lr: 0.001


visualization:
  save_images: true
  show_images: false

tiling:
  enable: true
  tile_size: 256
  stride: 128
  remove_border_count: 0
  mode: padding
  tile_count: 4

SeamSmoothing:
  apply: true
  mode: gaussian
  sigma: 1.0

normalization_stage: image
thresholding:
  method: F1AdaptiveThreshold
  stage: image